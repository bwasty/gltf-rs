language: rust

rust:
    - stable
    - beta
    - nightly

sudo: false

script:
    - cargo build --verbose --all-features --all
    - cargo test --verbose --all-features --all

addons:
    apt:
        packages:
            # for kcov
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
            - binutils-dev
            - libiberty-dev

os:
    - linux

matrix:
    allow_failures:
        - rust: nightly
        - rust: beta

# link-dead-code may improve coverage accuracy by preventing dead-code elimination
env:
  global:
    - RUSTFLAGS="-C link-dead-code"

# Codecov configuration based on https://github.com/codecov/example-rust
# When new test files are added, add another for-loop with the appropriate name glob
# If the test accesses external files, you may have to change the working directory
after_success: |
  wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
  tar xzf master.tar.gz &&
  cd kcov-master &&
  mkdir build &&
  cd build &&
  cmake .. &&
  make &&
  make install DESTDIR=../../kcov-build &&
  cd ../.. &&
  rm -rf kcov-master &&
  # for file in target/debug/test_wrapper-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  cd gltf-importer &&
  for file in ../target/debug/import_examples-*[^\.d]; do mkdir -p "../target/cov/$(basename $file)"; ../kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "../target/cov/$(basename $file)" "$file"; done &&
  cd .. &&
  bash <(curl -s https://codecov.io/bash) &&
  echo "Uploaded code coverage"
